#!/usr/bin/env ruby
# Copyright (C) 2014 Continuent, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.  You may obtain
# a copy of the License at
# 
#         http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Initial developer(s): Jeff Mace
# Contributor(s):

begin
  require 'rubygems'
  gem 'continuent-tools-core'
rescue LoadError
end

require 'continuent-tools-core'
require 'continuent-tools-nagios-monitor'

class ContinuentNagiosManagedConfiguration
  include TungstenScript
  include TungstenNagiosMonitor
  private
  
  def main
    unless File.exist?(opt(:lastrun))
      critical("The #{opt(:lastrun)} file is not present")
    end
    
    begin
      last_exit_code = File.new(opt(:lastrun)).read().chomp()
      
      if last_exit_code.to_s() != "0"
        critical("The last run of tungsten_manage_configuration was not successful")
      end
    rescue
      critical("There were issues reading #{opt(:lastrun)}")
    end
    
    begin
      mtime = File.mtime(opt(:lastrun))
      difference = Time.now()-mtime
      add_perfdata("lastrun", "#{difference};#{opt(:warning_level)};#{opt(:critical_level)};")
      
      if is_critical?(difference)
        critical("The tungsten_manage_configuration script last ran #{difference}s ago")
      elsif is_warning?(difference)
        warning("The tungsten_manage_configuration script last ran #{difference}s ago")
      else
        ok("The tungsten_manage_configuration script was successful")
      end
    rescue
      critical("There were issues reading #{opt(:lastrun)} modification time")
    end
  end
  
  def configure
    super()
    
    add_option(:lastrun, {
      :on => "--lastrun String",
      :help => "Path to the lastrun file written by tungsten_manage_configuration",
      :required => true
    })
    
    description("Check that the local managed configuration has run recently and was successful")
  end
  
  def script_name
    "tungsten_nagios_managed_configuration"
  end

  def uses_thresholds?
    true
  end
  
  self.new().run()
end